{
  "version": 3,
  "sources": ["../../@mui/joy/styles/styled.js", "../../@mui/joy/styles/useThemeProps.js", "../../@mui/joy/styles/ColorInversion.js"],
  "sourcesContent": ["import { createStyled } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nconst styled = createStyled({\n  defaultTheme\n});\nexport default styled;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useThemeProps as systemUseThemeProps } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useThemeProps({\n  props,\n  name\n}) {\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme: _extends({}, defaultTheme, {\n      components: {}\n    })\n  });\n}", "import * as React from 'react';\nimport { useTheme as useSystemTheme } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ColorInversion = /*#__PURE__*/React.createContext(undefined);\nexport const useColorInversion = childVariant => {\n  const overriableVariants = React.useContext(ColorInversion);\n  return {\n    /**\n     * Resolve the `color` value for the component.\n     * @param {ColorPaletteProp | 'inherit' | undefined} instanceColorProp The color defined on the instance.\n     * @param {ColorPaletteProp | 'inherit' | undefined} defaultColorProp The default color to use when variant inversion is not enabled.\n     */\n    getColor: (instanceColorProp, defaultColorProp) => {\n      if (overriableVariants && childVariant) {\n        if (overriableVariants.includes(childVariant)) {\n          // @ts-ignore internal logic\n          return instanceColorProp || 'context';\n        }\n      }\n      // @ts-ignore internal logic\n      return instanceColorProp || defaultColorProp;\n    }\n  };\n};\nexport function ColorInversionProvider({\n  children,\n  variant\n}) {\n  var _theme$colorInversion;\n  const theme = useSystemTheme(defaultTheme);\n  return /*#__PURE__*/_jsx(ColorInversion.Provider, {\n    value: variant ?\n    // `theme` could come from other emotion/styled-components context.\n    ((_theme$colorInversion = theme.colorInversionConfig) != null ? _theme$colorInversion : defaultTheme.colorInversionConfig)[variant] : undefined,\n    children: children\n  });\n}\nexport default ColorInversion;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,IAAM,SAAS,aAAa;AAAA,EAC1B;AACF,CAAC;AACD,IAAO,iBAAQ;;;ACLf;AACA;AAEe,SAARA,eAA+B;AAAA,EACpC;AAAA,EACA;AACF,GAAG;AACD,SAAO,cAAoB;AAAA,IACzB;AAAA,IACA;AAAA,IACA,cAAc,SAAS,CAAC,GAAG,sBAAc;AAAA,MACvC,YAAY,CAAC;AAAA,IACf,CAAC;AAAA,EACH,CAAC;AACH;;;ACdA,YAAuB;AACvB;AAEA,yBAA4B;AAC5B,IAAM,iBAAoC,oBAAc,MAAS;AAC1D,IAAM,oBAAoB,kBAAgB;AAC/C,QAAM,qBAA2B,iBAAW,cAAc;AAC1D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAML,UAAU,CAAC,mBAAmB,qBAAqB;AACjD,UAAI,sBAAsB,cAAc;AACtC,YAAI,mBAAmB,SAAS,YAAY,GAAG;AAE7C,iBAAO,qBAAqB;AAAA,QAC9B;AAAA,MACF;AAEA,aAAO,qBAAqB;AAAA,IAC9B;AAAA,EACF;AACF;AACO,SAAS,uBAAuB;AAAA,EACrC;AAAA,EACA;AACF,GAAG;AACD,MAAI;AACJ,QAAM,QAAQ,iBAAe,oBAAY;AACzC,aAAoB,mBAAAC,KAAK,eAAe,UAAU;AAAA,IAChD,OAAO;AAAA;AAAA,QAEL,wBAAwB,MAAM,yBAAyB,OAAO,wBAAwB,qBAAa,sBAAsB,OAAO;AAAA,QAAI;AAAA,IACtI;AAAA,EACF,CAAC;AACH;AACA,IAAO,yBAAQ;",
  "names": ["useThemeProps", "_jsx"]
}
