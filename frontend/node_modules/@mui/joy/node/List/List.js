"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.StyledList = void 0;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var React = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _clsx = _interopRequireDefault(require("clsx"));
var _utils = require("@mui/utils");
var _composeClasses = _interopRequireDefault(require("@mui/base/composeClasses"));
var _MenuUnstyled = require("@mui/base/MenuUnstyled");
var _SelectUnstyled = require("@mui/base/SelectUnstyled");
var _styles = require("../styles");
var _ColorInversion = require("../styles/ColorInversion");
var _listClasses = require("./listClasses");
var _NestedListContext = _interopRequireDefault(require("./NestedListContext"));
var _ComponentListContext = _interopRequireDefault(require("./ComponentListContext"));
var _ListProvider = _interopRequireDefault(require("./ListProvider"));
var _RadioGroupContext = _interopRequireDefault(require("../RadioGroup/RadioGroupContext"));
var _jsxRuntime = require("react/jsx-runtime");
const _excluded = ["component", "className", "children", "size", "orientation", "wrap", "variant", "color", "role"];
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const useUtilityClasses = ownerState => {
  const {
    variant,
    color,
    size,
    nesting,
    orientation,
    instanceSize
  } = ownerState;
  const slots = {
    root: ['root', orientation, variant && `variant${(0, _utils.unstable_capitalize)(variant)}`, color && `color${(0, _utils.unstable_capitalize)(color)}`, !instanceSize && !nesting && size && `size${(0, _utils.unstable_capitalize)(size)}`, instanceSize && `size${(0, _utils.unstable_capitalize)(instanceSize)}`, nesting && 'nesting']
  };
  return (0, _composeClasses.default)(slots, _listClasses.getListUtilityClass, {});
};
const StyledList = (0, _styles.styled)('ul')(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  function applySizeVars(size) {
    if (size === 'sm') {
      return {
        '--ListDivider-gap': '0.25rem',
        '--ListItem-minHeight': '2rem',
        '--ListItem-paddingY': '0.25rem',
        '--ListItem-paddingX': '0.5rem',
        '--ListItem-fontSize': theme.vars.fontSize.sm,
        '--List-decoratorSize': ownerState.orientation === 'horizontal' ? '1.5rem' : '2rem',
        '--Icon-fontSize': '1.125rem'
      };
    }
    if (size === 'md') {
      return {
        '--ListDivider-gap': '0.375rem',
        '--ListItem-minHeight': '2.5rem',
        '--ListItem-paddingY': '0.375rem',
        '--ListItem-paddingX': '0.75rem',
        '--ListItem-fontSize': theme.vars.fontSize.md,
        '--List-decoratorSize': ownerState.orientation === 'horizontal' ? '1.75rem' : '2.5rem',
        '--Icon-fontSize': '1.25rem'
      };
    }
    if (size === 'lg') {
      return {
        '--ListDivider-gap': '0.5rem',
        '--ListItem-minHeight': '3rem',
        '--ListItem-paddingY': '0.5rem',
        '--ListItem-paddingX': '1rem',
        '--ListItem-fontSize': theme.vars.fontSize.md,
        '--List-decoratorSize': ownerState.orientation === 'horizontal' ? '2.25rem' : '3rem',
        '--Icon-fontSize': '1.5rem'
      };
    }
    return {};
  }
  return [ownerState.nesting && (0, _extends2.default)({}, applySizeVars(ownerState.instanceSize), {
    '--ListItem-paddingRight': 'var(--ListItem-paddingX)',
    '--ListItem-paddingLeft': 'var(--NestedList-item-paddingLeft)',
    // reset ListItem, ListItemButton negative margin (caused by NestedListItem)
    '--List-itemButtonMarginBlock': '0px',
    '--List-itemButtonMarginInline': '0px',
    '--ListItem-marginBlock': '0px',
    '--ListItem-marginInline': '0px',
    padding: 0,
    marginInlineStart: 'var(--NestedList-marginLeft)',
    marginInlineEnd: 'var(--NestedList-marginRight)',
    marginBlockStart: 'var(--List-gap)',
    marginBlockEnd: 'initial' // reset user agent stylesheet.
  }), !ownerState.nesting && (0, _extends2.default)({}, applySizeVars(ownerState.size), {
    '--List-gap': '0px',
    '--List-decoratorColor': theme.vars.palette.text.tertiary,
    '--List-nestedInsetStart': '0px',
    '--ListItem-paddingLeft': 'var(--ListItem-paddingX)',
    '--ListItem-paddingRight': 'var(--ListItem-paddingX)',
    // Automatic radius adjustment kicks in only if '--List-padding' and '--List-radius' are provided.
    '--unstable_childRadius': 'max(var(--List-radius) - var(--List-padding), min(var(--List-padding) / 2, var(--List-radius) / 2))',
    '--ListItem-radius': 'var(--unstable_childRadius)',
    // by default, The ListItem & ListItemButton use automatic radius adjustment based on the parent List.
    '--ListItem-startActionTranslateX': 'calc(0.5 * var(--ListItem-paddingLeft))',
    '--ListItem-endActionTranslateX': 'calc(-0.5 * var(--ListItem-paddingRight))',
    margin: 'initial'
  }, ownerState.orientation === 'horizontal' ? (0, _extends2.default)({}, ownerState.wrap ? {
    padding: 'var(--List-padding)',
    // Fallback is not needed for row-wrap List
    marginInlineStart: 'calc(-1 * var(--List-gap))',
    marginBlockStart: 'calc(-1 * var(--List-gap))'
  } : {
    paddingInline: 'var(--List-padding, var(--ListDivider-gap))',
    paddingBlock: 'var(--List-padding)'
  }) : {
    paddingBlock: 'var(--List-padding, var(--ListDivider-gap))',
    paddingInline: 'var(--List-padding)'
  }), (0, _extends2.default)({
    boxSizing: 'border-box',
    borderRadius: 'var(--List-radius)',
    listStyle: 'none',
    display: 'flex',
    flexDirection: ownerState.orientation === 'horizontal' ? 'row' : 'column'
  }, ownerState.wrap && {
    flexWrap: 'wrap'
  }, {
    flexGrow: 1,
    position: 'relative'
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color])];
});
exports.StyledList = StyledList;
const ListRoot = (0, _styles.styled)(StyledList, {
  name: 'JoyList',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({});
/**
 *
 * Demos:
 *
 * - [Lists](https://mui.com/joy-ui/react-list/)
 *
 * API:
 *
 * - [List API](https://mui.com/joy-ui/api/list/)
 */
const List = /*#__PURE__*/React.forwardRef(function List(inProps, ref) {
  var _inProps$size;
  const nesting = React.useContext(_NestedListContext.default);
  const menuContext = React.useContext(_MenuUnstyled.MenuUnstyledContext);
  const selectContext = React.useContext(_SelectUnstyled.SelectUnstyledContext);
  const radioGroupContext = React.useContext(_RadioGroupContext.default);
  const props = (0, _styles.useThemeProps)({
    props: inProps,
    name: 'JoyList'
  });
  const {
      component,
      className,
      children,
      size: sizeProp,
      orientation = 'vertical',
      wrap = false,
      variant = 'plain',
      color: colorProp = 'neutral',
      role: roleProp
    } = props,
    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  const {
    getColor
  } = (0, _ColorInversion.useColorInversion)(variant);
  const color = getColor(inProps.color, colorProp);
  const size = sizeProp || ((_inProps$size = inProps.size) != null ? _inProps$size : 'md');
  let role;
  if (menuContext || selectContext) {
    role = 'group';
  }
  if (radioGroupContext) {
    role = 'presentation';
  }
  if (roleProp) {
    role = roleProp;
  }
  const ownerState = (0, _extends2.default)({}, props, {
    instanceSize: inProps.size,
    size,
    nesting,
    orientation,
    wrap,
    variant,
    color,
    role
  });
  const classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(ListRoot, (0, _extends2.default)({
    ref: ref,
    as: component,
    className: (0, _clsx.default)(classes.root, className),
    ownerState: ownerState,
    role: role,
    "aria-labelledby": typeof nesting === 'string' ? nesting : undefined
  }, other, {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ComponentListContext.default.Provider, {
      value: `${typeof component === 'string' ? component : ''}:${role || ''}`,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ListProvider.default, {
        row: orientation === 'horizontal',
        wrap: wrap,
        children: children
      })
    })
  }));
});
process.env.NODE_ENV !== "production" ? List.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: _propTypes.default.node,
  /**
   * @ignore
   */
  className: _propTypes.default.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'neutral'
   */
  color: _propTypes.default /* @typescript-to-proptypes-ignore */.oneOfType([_propTypes.default.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), _propTypes.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: _propTypes.default.elementType,
  /**
   * The component orientation.
   * @default 'vertical'
   */
  orientation: _propTypes.default.oneOf(['horizontal', 'vertical']),
  /**
   * @ignore
   */
  role: _propTypes.default /* @typescript-to-proptypes-ignore */.string,
  /**
   * The size of the component (affect other nested list* components).
   * @default 'md'
   */
  size: _propTypes.default /* @typescript-to-proptypes-ignore */.oneOfType([_propTypes.default.oneOf(['sm', 'md', 'lg']), _propTypes.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object, _propTypes.default.bool])), _propTypes.default.func, _propTypes.default.object]),
  /**
   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.
   * @default 'plain'
   */
  variant: _propTypes.default /* @typescript-to-proptypes-ignore */.oneOfType([_propTypes.default.oneOf(['outlined', 'plain', 'soft', 'solid']), _propTypes.default.string]),
  /**
   * Only for horizontal list.
   * If `true`, the list sets the flex-wrap to "wrap" and adjust margin to have gap-like behavior (will move to `gap` in the future).
   *
   * @default false
   */
  wrap: _propTypes.default.bool
} : void 0;
var _default = List;
exports.default = _default;